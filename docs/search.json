[{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":null,"dir":"","previous_headings":"","what":"CLAUDE.md - OpenWashData R Package Review Guide","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"guide helps Claude Code review R data packages openwashdata organization, ensuring consistency, quality, completeness across published datasets.","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"review process follows PLAN → CREATE → TEST → DEPLOY workflow. entire review process starts package dev branch, issues resolved final PR dev main created. phase requires explicit user approval proceeding. CRITICAL WORKFLOW RULE: Claude MUST stop completing individual issue. user must manually restart Claude next issue.","code":""},{"path":[]},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"id_1-plan-phase","dir":"","previous_headings":"Review Workflow","what":"1. PLAN Phase","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"initiated via /review-package [package-name], Claude : Analyze Package Structure Verify package created washr template Check required directories: R/, data/, data-raw/, inst/extdata/, man/ Confirm presence key files: DESCRIPTION, README.Rmd, _pkgdown.yml Create Review Issues (4 GitHub issues checklists) Issue 1: General Information & Metadata (checklist) Issue 2: Data Content & Processing (checklist) Issue 3: Documentation (checklist) Issue 4: Tests & CI/CD (checklist) issue must created checklist Claude update items completed. Present Review Plan Summary findings List issues addressed Request user confirmation proceeding","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"id_2-create-phase","dir":"","previous_headings":"Review Workflow","what":"2. CREATE Phase","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"user approval, work issues ONE TIME. WORKFLOW ISSUE: 1. User runs /review-issue [number] start work specific issue 2. Claude creates new branch dev issue 3. Claude implements changes issue 4. Claude commits changes descriptive message 5. Claude creates PR dev branch (main!) 6. CLAUDE MUST STOP COMPLETELY - proceed next issue 7. User reviews PR, merges dev 8. User manually restarts Claude /review-issue [next-number] next issue CRITICAL: Claude MUST automatically continue next issue. workflow STOPS creating PR.","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"issue-1-general-information--metadata","dir":"","previous_headings":"Review Workflow > 2. CREATE Phase","what":"Issue 1: General Information & Metadata","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Claude must check items completed update issue Title (descriptive, <65 characters) Description (clear purpose statement) Authors ORCID IDs License: CC 4.0 Dependencies properly declared Version follows semantic versioning CITATION.cff file present valid Generate citation using washr::update_citation()","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"issue-2-data-content--processing","dir":"","previous_headings":"Review Workflow > 2. CREATE Phase","what":"Issue 2: Data Content & Processing","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Data files data/ directory (.rda format) CSV/XLSX exports inst/extdata/ Main dataset accessible via function matching package name unexpected missing values Consistent data types Reasonable value ranges Proper encoding (UTF-8) data_processing.R data-raw/ Script reproducible well-commented Raw data files preserved data-raw/ dictionary.csv variable descriptions Uses tidyverse conventions Handles data cleaning transparently Analysis testing scripts preserved analysis/ directory","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"issue-3-documentation","dir":"","previous_headings":"Review Workflow > 2. CREATE Phase","what":"Issue 3: Documentation","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Dynamic content generation Installation instructions Data overview dimensions Variable dictionary table License citation sections Roxygen documentation exported functions _pkgdown.yml configured standard openwashdata template Package website builds without errors","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"issue-4-tests--cicd","dir":"","previous_headings":"Review Workflow > 2. CREATE Phase","what":"Issue 4: Tests & CI/CD","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"GitHub Actions workflow R-CMD-check Package passes devtools::check() errors/warnings Examples run successfully Data loads correctly MANDATORY PROCESS ISSUE: 1. Present planned changes request user confirmation implementing 2. Create feature branch dev (e.g., issue-1-metadata) 3. Implement changes regular check-ins: - checklist item major change: - Announce specific change - Implement - Show result - CHECK-: “Ready commit change? (commit/continue)” - “commit”: Create atomic commit change 4. Run tests changes 5. Update GitHub issue check completed items: - Use gh issue view [number] get current issue body - Update checkboxes - [ ] - [x] completed items - Use gh issue edit [number] --body \"[updated body]\" save 6. Create PR detailed summary including commits: ``` gh pr create –base dev –title “Fix Issue #1: [Description]” –body “## Summary Addresses Issue #[number] ## Changes Made - [Specific changes] ## Completed Checklist Items - [x] Item 1 - [x] Item 2 Closes #[number]” ``7. **STOP IMMEDIATELY** - Output: \"✅ PR created Issue #1. Issue checklist updated. Please review merge, run/review-issue 2` continue.” 8. PROCEED issue","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"id_3-test-phase","dir":"","previous_headings":"Review Workflow","what":"3. TEST Phase","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Run comprehensive package checks: Verify: - tests pass - R CMD check issues - Documentation renders correctly - Website builds successfully","code":"devtools::check() devtools::build() pkgdown::build_site()"},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"id_4-deploy-phase","dir":"","previous_headings":"Review Workflow","what":"4. DEPLOY Phase","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Build deploy pkgdown website Verify Plausible analytics tracking Confirm changes committed Approve PR merge main branch Create release using /create-release command","code":""},{"path":[]},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"required-files-structure","dir":"","previous_headings":"Key Standards","what":"Required Files Structure","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"","code":"package-name/ ├── DESCRIPTION ├── NAMESPACE ├── R/ │   └── package-name.R ├── data/ │   └── package-name.rda ├── data-raw/ │   ├── data_processing.R │   └── dictionary.csv ├── inst/ │   ├── CITATION │   └── extdata/ │       ├── package-name.csv │       └── package-name.xlsx ├── man/ ├── vignettes/                # Optional vignettes directory │   └── articles/             # Always use articles/ subdirectory │       └── example.Rmd       # Keep all vignettes here ├── analysis/                 # Analysis and testing scripts (not built) │   ├── test_package.R │   ├── data_analysis.R │   └── validation.R ├── README.Rmd ├── README.md ├── NEWS.md                   # Package changelog ├── CITATION.cff ├── _pkgdown.yml              # Standard openwashdata configuration ├── .Rbuildignore └── .github/     └── workflows/         └── R-CMD-check.yaml"},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"vignettes-convention","dir":"","previous_headings":"Key Standards","what":"Vignettes Convention","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"IMPORTANT: vignettes must stored vignettes/articles/ subdirectory, directly vignettes/. convention: - Ensures vignettes rendered correctly pkgdown - Keeps vignettes separate package documentation - Prevents CRAN submission issues - Maintains consistency across openwashdata packages Example structure:","code":"vignettes/ └── articles/     ├── getting-started.Rmd     ├── data-analysis.Rmd     └── case-study.Rmd"},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"r-scripts-for-reproducibility","dir":"","previous_headings":"Key Standards","what":"R Scripts for Reproducibility","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"R scripts used testing, validation, analysis package development must preserved repository reproducibility purposes. scripts stored analysis/ directory package root level.","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"why-analysis-directory","dir":"","previous_headings":"Key Standards > R Scripts for Reproducibility","what":"Why analysis/ directory:","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"included installed package (automatically ignored R CMD build) Available GitHub future reference reproducibility Organized separately package code configuration needed - R automatically excludes top-level directories recognized package components","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"script-organization-in-analysis","dir":"","previous_headings":"Key Standards > R Scripts for Reproducibility","what":"Script Organization in analysis/:","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"test_package.R - Scripts testing package functionality data_analysis.R - Exploratory data analysis scripts validation.R - Data validation quality checks comparison.R - Scripts comparing different data versions analysis utility scripts used development approach ensures analysis work remains transparent reproducible without affecting package installation CRAN compliance.","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"package-dependencies","dir":"","previous_headings":"Key Standards","what":"Package Dependencies","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Common dependencies data packages: - dplyr, tidyr (data manipulation) - readr, readxl (data import) - janitor (data cleaning) - desc (DESCRIPTION parsing) - gt, kableExtra (table formatting) - usethis (development workflows, including NEWS.md versioning)","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"quality-criteria","dir":"","previous_headings":"Key Standards","what":"Quality Criteria","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Reproducibility: data processing steps documented runnable Transparency: Raw data preserved clear transformation pipeline Accessibility: Multiple export formats (R, CSV, XLSX) Documentation: Comprehensive variable descriptions usage examples Consistency: Follows openwashdata naming structure conventions","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"branch-and-pr-strategy","dir":"","previous_headings":"","what":"Branch and PR Strategy","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Package Review Branch Structure: - main - Production branch (protected) - dev - Development branch review work happens - issue-[n]-description - Feature branches issue (created dev) PR Flow: 1. issue gets PR feature branch → dev 2. User reviews merges issue PR dev 3. issues resolved, create final PR dev → main 4. Never create PRs directly main review process","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"commands","dir":"","previous_headings":"","what":"Commands","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"/review-package [package-name] - Start package review (analyzes package creates issues) /review-status - Check current review progress /review-issue [number] - Work specific issue (STOPS creating PR) /review-complete - issues merged dev, create final PR main /create-release [version] - Create new release changelog","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"issue-resolution-workflow","dir":"","previous_headings":"","what":"Issue Resolution Workflow","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"working issue via /review-issue [number]: Branch - Create feature branch dev: git checkout -b issue-[number]-description Analyze - Review specific issue requirements checklist items Present analysis needs done CHECK-#1: “’s found. proceed changes? (yes/)” Implement Changes Stages Announce ’re Make change Show result CHECK-: “Change completed. Ready commit? Type ‘commit’ save change, ‘continue’ make changes.” user says “commit”: Run git add -&& git commit -m \"Description specific change\" Repeat significant change Test - changes, verify everything works Run relevant tests (devtools::check(), build_readme(), etc.) CHECK-: “tests passed. Ready finalize? (yes/)” Update Issue - Check completed items issue checklist Use gh issue view [number] get current issue body Update checkboxes - [ ] - [x] completed items Use gh issue edit [number] --body \"[updated body]\" save CHECK-: “Issue checklist updated. Ready create PR? (yes/)” Final Commit (uncommitted changes) git add -&& git commit -m \"Final updates Issue #[number]\" Push - Push branch: git push -u origin issue-[number]-description Create PR - ALWAYS dev detailed body: STOP COMPLETELY - Output final message cease activity CRITICAL STOPPING BEHAVIOR: - creating PR, Claude MUST output: “✅ PR created Issue #[number]. Please review merge dev, run /review-issue [next-number] continue next issue.” - Claude MUST continue tasks - Claude MUST suggest next steps - Claude MUST start working next issue - conversation effectively ends user explicitly restarts /review-issue [next-number]","code":"gh pr create --base dev --title \"Fix Issue #[number]: [description]\" --body \"## Summary Addresses Issue #[number]  ## Changes Made - [List specific changes made] - [Include which checklist items were completed]  ## Commits in this PR - [List each commit message]  ## Checklist - [x] Item 1 completed - [x] Item 2 completed - [ ] Item 3 (if not completed, explain why)  Closes #[number]\""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"check-in-points-and-commit-strategy","dir":"","previous_headings":"","what":"Check-In Points and Commit Strategy","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Claude MUST pause check-points: analyzing issue requirements making changes Ask: “’s plan : [list]. proceed? (yes/)” significant change (e.g., checklist item) Show changed Ask: “Ready commit change? (commit/continue)” “commit”: Create atomic commit descriptive message running tests Show test results Ask: “tests passed. Ready finalize? (yes/)” updating issue checkboxes creating PR Ask: “Issue updated. Ready create PR? (yes/)” Commit Guidelines: - commit atomic (one logical change) - Use descriptive commit messages - Multiple small commits preferred one large commit - Example messages: - “Update DESCRIPTION title description” - “Add ORCID IDs authors” - “Configure CC 4.0 license” - “Update CITATION washr::update_citation()”","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"example-issue-by-issue-workflow","dir":"","previous_headings":"","what":"Example Issue-by-Issue Workflow","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"","code":"User: /review-issue 1 Claude: [Creates branch issue-1-metadata]         \"I'll work on Issue #1: General Information & Metadata. Here's what needs to be done:         - Update DESCRIPTION file         - Fix CITATION.cff         - Generate citation with washr          Should I proceed? (yes/no)\"  User: yes Claude: \"Starting with DESCRIPTION file updates...\"         [Shows DESCRIPTION changes]         \"✅ DESCRIPTION updated. Ready to commit? (commit/continue)\"  User: commit Claude: [Commits: \"Update DESCRIPTION file metadata\"]         \"Now working on CITATION.cff...\"         [Shows CITATION.cff changes]         \"✅ CITATION.cff created. Ready to commit? (commit/continue)\"  User: commit Claude: [Commits: \"Add CITATION.cff file\"]         \"Running washr::update_citation()...\"         [Shows result]         \"✅ Citation updated. Ready to commit? (commit/continue)\"  User: commit Claude: [Commits: \"Update CITATION with washr\"]         [Updates Issue #1 checkboxes]         [Creates PR with 3 commits listed]         \"✅ PR created for Issue #1 with 3 commits. Issue checklist updated. Please review and merge to dev, then run `/review-issue 2` to continue.\"         [STOPS COMPLETELY]  [Repeat for all 4 issues]  User: /review-complete Claude: [Creates final PR from dev to main]         \"✅ All issues resolved. Final PR created from dev to main for package review completion.\"  [After PR merged to main]  User: /create-release 0.1.0 Claude: [Updates version, creates NEWS.md entry, tags release]         \"✅ Release v0.1.0 created with changelog. Package published!\""},{"path":[]},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"creating-a-release-with-create-release-version","dir":"","previous_headings":"Release Management","what":"Creating a Release with /create-release [version]","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"creating release, Claude : PAUSE: Ask user “proceeding, please ensure repository enabled/synced Zenodo. Zenodo integration enabled repo? (yes/)” : Direct user enable https://zenodo.org/account/settings/github/ Use usethis::use_version() bump version DESCRIPTION Follow semantic versioning (major.minor.patch) Update version field match new version Update date-released current date Run washr::update_citation() sync citation files Verify version consistency across DESCRIPTION, CITATION, CITATION.cff Use usethis::use_news_md() NEWS.md doesn’t exist Add new version section release date Include summary changes recent commits/PRs Format following tidyverse NEWS conventions: Commit message: “Release version [version]” Include updates DESCRIPTION, CITATION.cff, NEWS.md Push main branch Use gh release create v[version] Include NEWS.md content release notes Tag release commit Zenodo automatically generates DOI step PAUSE: Ask user “GitHub release created! Please check Zenodo generated DOI provide (format: 10.5281/zenodo.XXXXXXX):” Add Zenodo badge README.Rmd: [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.XXXXXXX.svg)](https://doi.org/10.5281/zenodo.XXXXXXX) Run washr::update_citation(doi = \"10.5281/zenodo.XXXXXXX\") provided DOI Update citation files include DOI Commit message: “Add Zenodo DOI package” Push DOI updates main Rebuild site include new version DOI badge Deploy updated documentation","code":"# packagename 0.1.0  * Initial release to GitHub * Added core functionality for X (#1) * Fixed issue with Y (#2) * Enhanced documentation (#3)"},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"newsmd-format-guidelines","dir":"","previous_headings":"Release Management","what":"NEWS.md Format Guidelines","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"version gets section version number date Use bullet points changes Reference issue/PR numbers parentheses Group changes type (new features, bug fixes, etc.) recent version top Follow tidyverse style guide NEWS files Example NEWS.md structure:","code":"# washrkenya 0.2.0 (2024-01-15)  ## New features * Added support for temporal analysis (#12) * New vignette on data visualization (#15)  ## Bug fixes * Fixed encoding issues in region names (#10) * Corrected data type for population column (#11)  # washrkenya 0.1.0 (2023-12-01)  * Initial release * Basic data access functions * Documentation and examples"},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"important-notes","dir":"","previous_headings":"","what":"Important Notes","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Always request user confirmation phases Check user implementing changes CREATE phase Preserve existing git history commits Follow tidyverse style guide R code Use semantic versioning package versions","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"project-management-with-github-cli","dir":"","previous_headings":"","what":"Project Management with GitHub CLI","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"List issues: gh issue list View issue details: gh issue view 80 (e.g., issue #80 “Rename geographies parameter”) Create branch issue: gh issue develop 80 Checkout branch: git checkout 80-rename-geographies-parameter--entities Create pull request: gh pr create --title \"Rename geographies parameter entities\" --body \"Implements #80\" List pull requests: gh pr list View pull request: gh pr view PR_NUMBER","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"buildtestcheck-commands","dir":"","previous_headings":"","what":"Build/Test/Check Commands","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Build package: R CMD build . Install package: R CMD INSTALL . Run tests: R -e \"devtools::test()\" Run single test: R -e \"devtools::test_file('tests/testthat/test-FILE_NAME.R', reporter = 'progress')\" Run R CMD check: R -e \"devtools::check()\" Build Roxygen2 documentation: R -e \"devtools::document()\" Build vignettes: R -e \"devtools::build_vignettes()\" Build README.md README.Rmd: R -e \"devtools::build_readme()\"","code":""},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"standard-_pkgdownyml-configuration","dir":"","previous_headings":"","what":"Standard _pkgdown.yml Configuration","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"openwashdata packages must use following standard _pkgdown.yml configuration (replace packagename actual package name): Key elements: - URL must point correct GitHub repository - Bootstrap 5 theme required - Plausible analytics script header - Consistent sidebar structure funding acknowledgment - Standard author role display - Reference section data access function","code":"url: https://github.com/openwashdata/packagename template:   bootstrap: 5   includes:     in_header: |       <script defer data-domain=\"openwashdata.github.io\" src=\"https://plausible.io/js/script.js\"><\/script>  home:   links:     - icon: github       text: GitHub repository       href: https://github.com/openwashdata/packagename   sidebar:     structure: [links, citation, authors, dev, custom]     components:       custom:         title: Funding         text: This project was funded by the [Open Research Data Program of the ETH Board](https://ethrat.ch/en/eth-domain/open-research-data/).  authors:   footer:     roles: [cre, fnd]     text: \"Crafted by\"   sidebar:     roles: [cre, aut, ctb]     before: \"So *who* does the work?\"     after: \"Thanks all!\"  reference: - title: \"Data\"   desc: \"Access the packagename dataset\"   contents:   - packagename"},{"path":"https://github.com/openwashdata/artesianwells/CLAUDE.html","id":"code-style-guidelines","dir":"","previous_headings":"","what":"Code Style Guidelines","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Use 2 spaces indentation (tabs) Maximum 80 characters per line Use tidyverse style R code (dplyr, tidyr, purrr) Use snake_case function variable names","code":""},{"path":"https://github.com/openwashdata/artesianwells/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emmanuel Mhango. Author, maintainer.","code":""},{"path":"https://github.com/openwashdata/artesianwells/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mhango E (2025). “artesianwells: Artesian Well Site Assessment Data.” doi:10.5281/zenodo.15824828, https://github.com/openwashdata/artesianwells.","code":"@Misc{,   title = {artesianwells: Artesian Well Site Assessment Data},   author = {Emmanuel Mhango},   year = {2025},   url = {https://github.com/openwashdata/artesianwells},   abstract = {A dataset capturing geospatial, structural, usage, and management characteristics of artesian well sites.},   version = {0.1.0},   type = {dataset},   doi = {10.5281/zenodo.15824828}, }"},{"path":"https://github.com/openwashdata/artesianwells/index.html","id":"artesian-well-site-assessment-data","dir":"","previous_headings":"","what":"Artesian Well Site Assessment Data","title":"Artesian Well Site Assessment Data","text":"Description dataset provides detailed information artesian well sites located Zomba, Blantyre, Mangochi, Thyolo, Lilongwe, Dowa, Balaka, Mwanza, Neno Chiradzulo, collected April 2024. record represents unique well site includes attributes related location (latitude longitude), water source characteristics, infrastructure details, site usage, environmental context, management structures. Key variables Geolocation: Coordinates map analyze spatial distribution. Water source information: Whether well artesian, presence structures, ability test flow, time (seconds) fill 20-liter container. Usage patterns: Main additional uses site (e.g., domestic, irrigation, fish farming). Nearby water abstractions: Proximity attributes neighboring abstraction points. Environmental data: Seasonal availability nearby river presence. dataset complemented images captured site, accessible via permanent URLs, provide photographic evidence physical infrastructural conditions. Potential Use Cases Water Resource Planning Management Government bodies NGOs can use dataset assess water point availability, accessibility, infrastructure needs. Hydrological Environmental Studies Researchers environmental scientists can analyze recharge patterns, abstraction pressures, seasonal availability groundwater sustainability assessments. Infrastructure Development Maintenance Engineers local authorities can use structure type condition data prioritize maintenance investments water infrastructure. Community Health Livelihood Planning dataset helps evaluate adequacy water sources domestic agricultural use, critical public health economic planning. Geospatial GIS Mapping Projects detailed coordinates associated metadata support mapping efforts visualize analyze spatial patterns water accessibility site clustering. Monitoring Evaluation (M&E) Organizations implementing rural water programs can track improvements, assess usage efficiency, monitor infrastructure time.","code":""},{"path":"https://github.com/openwashdata/artesianwells/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Artesian Well Site Assessment Data","text":"can install development version artesianwells GitHub : Alternatively, can download individual datasets CSV XLSX file table . Click Download CSV. window opens displays CSV browser. Right-click anywhere inside window select “Save Page …”. Save file folder choice.","code":"# install.packages(\"devtools\") devtools::install_github(\"openwashdata/artesianwells\") ## Run the following code in console if you don't have the packages ## install.packages(c(\"dplyr\", \"knitr\", \"readr\", \"stringr\", \"gt\", \"kableExtra\")) library(dplyr) library(knitr) library(readr) library(stringr) library(gt) library(kableExtra)"},{"path":"https://github.com/openwashdata/artesianwells/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"Artesian Well Site Assessment Data","text":"package provides access detailed information artesian well sites","code":"library(artesianwells)"},{"path":"https://github.com/openwashdata/artesianwells/index.html","id":"artesianwells","dir":"","previous_headings":"Data","what":"artesianwells","title":"Artesian Well Site Assessment Data","text":"dataset artesianwells contains 44 observations 29 variables overview variable names, see following table.","code":"artesianwells |>    head(3) |>    gt::gt() |>   gt::as_raw_html()"},{"path":"https://github.com/openwashdata/artesianwells/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Artesian Well Site Assessment Data","text":"","code":"library(artesianwells) library(dplyr) library(ggplot2) library(maps) # Filter usable water point locations water_map_data <- artesianwells %>%   filter(!is.na(latitude) & !is.na(longitude))  # Ensure geo-points are valid  # Get Malawi map outline malawi_map <- map_data(\"world\", region = \"Malawi\")  # Plot the water point locations ggplot() +   geom_polygon(data = malawi_map, aes(x = long, y = lat, group = group),                fill = \"gray90\", color = \"gray70\") +   geom_point(data = water_map_data,              aes(x = longitude, y = latitude, color = use_of_site),              size = 2, alpha = 0.7) +   coord_fixed(1.3) +   labs(     title = \"Artesian Wells in Malawi\",     x = \"Longitude\", y = \"Latitude\", color = \"Use of Water Site\"   ) +   theme_minimal(base_size = 13) +   theme(legend.position = \"bottom\")"},{"path":"https://github.com/openwashdata/artesianwells/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Artesian Well Site Assessment Data","text":"Data available CC-.","code":""},{"path":"https://github.com/openwashdata/artesianwells/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Artesian Well Site Assessment Data","text":"Please cite package using:","code":"citation(\"artesianwells\") #> Um Paket 'artesianwells' in Publikationen zu zitieren, nutzen Sie #> bitte: #>  #>   Mhango E (2025). \"artesianwells: Artesian Well Site Assessment Data.\" #>   doi:10.5281/zenodo.15824828 #>   <https://doi.org/10.5281/zenodo.15824828>, #>   <https://github.com/openwashdata/artesianwells>. #>  #> Ein BibTeX-Eintrag für LaTeX-Benutzer ist #>  #>   @Misc{, #>     title = {artesianwells: Artesian Well Site Assessment Data}, #>     author = {Emmanuel Mhango}, #>     year = {2025}, #>     url = {https://github.com/openwashdata/artesianwells}, #>     abstract = {A dataset capturing geospatial, structural, usage, and management characteristics of artesian well sites.}, #>     version = {0.1.0}, #>     type = {dataset}, #>     doi = {10.5281/zenodo.15824828}, #>   }"},{"path":"https://github.com/openwashdata/artesianwells/reference/artesianwells.html","id":null,"dir":"Reference","previous_headings":"","what":"artesianwells: Artesian Well Site Assessment Data — artesianwells","title":"artesianwells: Artesian Well Site Assessment Data — artesianwells","text":"dataset capturing geospatial, structural, usage, management characteristics artesian well sites","code":""},{"path":"https://github.com/openwashdata/artesianwells/reference/artesianwells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"artesianwells: Artesian Well Site Assessment Data — artesianwells","text":"","code":"artesianwells"},{"path":"https://github.com/openwashdata/artesianwells/reference/artesianwells.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"artesianwells: Artesian Well Site Assessment Data — artesianwells","text":"tibble 44 rows 29 variables date_submitted Date survey data entry submitted latitude Latitude coordinate surveyed site longitude Longitude coordinate surveyed site artesian_well Indicates whether location artesian well district Administrative district site located traditional_authority Traditional authority site falls well_images Links filenames images showing well has_structure Indicates well surrounding structure well_structure_type Type structure present around well well_structure_type_other Description structure selected can_test_flow Indicates flow test can conducted site seconds_to_fill_20L Time seconds required fill 20 liter container use_of_site Primary community usage water source other_site_use Additional uses site () seasonal_unavail Indicates site becomes unavailable certain seasons area_photos Links filenames photos showing broader site area abstraction_nearby Indicates water abstractions near site abstraction_count Number nearby water abstractions abs1_name Name label nearest water abstraction abs1_latitude Latitude nearest abstraction abs1_longitude Longitude nearest abstraction abs1_method Method used nearest abstraction abs1_region Region area nearest abstraction located recharge_known Indicates groundwater recharge source known recharge_other Description recharge source selected river_nearby Indicates river near site has_operator Indicates water point designated operator mgmt_type Type management place water source mgmt_type_other Type management place water source selected","code":""},{"path":"https://github.com/openwashdata/artesianwells/reference/artesianwells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"artesianwells: Artesian Well Site Assessment Data — artesianwells","text":"","code":"# Load the dataset data(artesianwells)  # View the first few rows head(artesianwells) #> # A tibble: 6 × 29 #>   date_submitted latitude longitude artesian_well district traditional_authority #>   <chr>             <dbl>     <dbl> <chr>         <chr>    <chr>                 #> 1 4/3/2024          -15.3      35.0 Meleka 2 art… Balaka   TA Nkaya              #> 2 4/3/2024          -15.3      35.0 Msunuzi Arte… Balaka   TA Nkaya              #> 3 4/3/2024          -15.4      35.0 Mulangeni ar… Blantyre TA Chigalu            #> 4 4/3/2024          -15.5      35.1 Jordan Artes… Blantyre TA Lundu              #> 5 4/4/2024          -15.6      35.0 Pasani Artes… Blantyre TA Kapeni             #> 6 4/4/2024          -15.9      34.9 Ndire         Blantyre TA Somba              #> # ℹ 23 more variables: well_images <chr>, has_structure <chr>, #> #   well_structure_type <chr>, well_structure_type_other <chr>, #> #   can_test_flow <chr>, seconds_to_fill_20L <dbl>, use_of_site <chr>, #> #   other_site_use <chr>, seasonal_unavail <chr>, area_photos <chr>, #> #   abstraction_nearby <chr>, abstraction_count <dbl>, abs1_name <chr>, #> #   abs1_latitude <dbl>, abs1_longitude <dbl>, abs1_method <chr>, #> #   abs1_region <chr>, recharge_known <chr>, recharge_other <chr>, …  # Check dimensions dim(artesianwells) #> [1] 44 29  # Summary of districts table(artesianwells$district) #>  #>   Balaka Blantyre Chikwawa  Karonga  Liwonde Machinga Mangochi   Mwanza  #>        2        5        4        3        1       10        8        1  #>     Neno  Ntchisi   Salima  #>        3        4        3"},{"path":"https://github.com/openwashdata/artesianwells/news/index.html","id":"artesianwells-010","dir":"Changelog","previous_headings":"","what":"artesianwells 0.1.0","title":"artesianwells 0.1.0","text":"Initial release GitHub Dataset contains information 44 artesian well sites across 10 districts Malawi Geospatial coordinates mapping Water flow measurements (time fill 20L container) Infrastructure details well structures Usage patterns management information Photographic documentation links Variable dictionary descriptions README usage examples visualization Roxygen documentation data access Configured pkgdown website Plausible analytics Added GitHub Actions R CMD checks Package meets openwashdata standards","code":""}]
